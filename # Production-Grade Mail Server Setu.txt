# **Production-Grade Mail Server Setup Using Docker on SLES**

## **Copyright Notice**

**Copyright © 2025 Adam.** All rights reserved.

This document may not be reproduced, distributed, or modified without explicit permission from the author.

---

## **1. Introduction**

This guide provides a **production-grade** email server setup using **Postfix, Dovecot, OpenDKIM, OpenDMARC, and Rspamd** inside a **Docker container** on **SUSE Linux Enterprise Server (SLES).**

### **Features:**

- ✅ **Postfix** - SMTP server for sending emails
- ✅ **Dovecot** - IMAP/POP3 server for receiving emails
- ✅ **OpenDKIM & OpenDMARC** - Email authentication
- ✅ **Rspamd** - Spam filtering
- ✅ **MariaDB/PostgreSQL** - User authentication
- ✅ **SSL/TLS** - Secure email transmission

---

## **2. Prerequisites**

### **Install Docker on SLES**

```sh
sudo SUSEConnect -p PackageHub/15.3/x86_64
sudo zypper install -y docker docker-compose git
sudo systemctl enable --now docker
```

---

## **3. Project Structure**

```
mailserver/
│── Dockerfile
│── docker-compose.yml
│── config/
│   ├── postfix/
│   │   ├── main.cf
│   │   ├── master.cf
│   ├── dovecot/
│   │   ├── dovecot.conf
│   │   ├── 10-auth.conf
│   │   ├── 10-mail.conf
│   ├── rspamd/
│   │   ├── local.d/
│   │   ├── override.d/
│── entrypoint.sh
```

---

## **4. Dockerfile**

```dockerfile
FROM opensuse/leap:latest
LABEL maintainer="admin@fungigrotto.com"

# Install required packages
RUN zypper refresh && zypper install -y \
    postfix \
    dovecot \
    opendkim \
    opendmarc \
    rspamd \
    mariadb-client \
    telnet \
    && rm -rf /var/lib/zypp

# Copy configuration files
COPY config/postfix /etc/postfix/
COPY config/dovecot /etc/dovecot/
COPY config/rspamd /etc/rspamd/

# Set permissions
RUN chmod -R 644 /etc/postfix/* /etc/dovecot/* /etc/rspamd/*

# Entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE 25 465 587 993 995
CMD ["/entrypoint.sh"]
```

---

## **5. Entrypoint Script**

```sh
#!/bin/bash
set -e

echo "Starting Postfix..."
service postfix start

echo "Starting Dovecot..."
service dovecot start

echo "Starting OpenDKIM & OpenDMARC..."
service opendkim start
service opendmarc start

echo "Starting Rspamd..."
service rspamd start

tail -f /var/log/mail.log
```

---

## **6. Postfix Configuration**

```ini
smtpd_banner = fungigrotto.com ESMTP
smtpd_use_tls=yes
smtpd_tls_cert_file=/etc/ssl/certs/mail.pem
smtpd_tls_key_file=/etc/ssl/private/mail.key
myhostname = mail.fungigrotto.com
mydestination = localhost, $myhostname, fungigrotto.com
message_size_limit = 52428800
```

---

## **7. Docker Compose File**

```yaml
version: '3.8'
services:
  mailserver:
    build: .
    container_name: mailserver
    hostname: mail
    domainname: fungigrotto.com
    restart: always
    ports:
      - "25:25"
      - "465:465"
      - "587:587"
      - "993:993"
      - "995:995"
    volumes:
      - maildata:/var/mail
      - mailconfig:/etc/postfix
    environment:
      - HOSTNAME=mail.fungigrotto.com
      - DOMAIN=fungigrotto.com
    networks:
      - mailnet

volumes:
  maildata:
  mailconfig:

networks:
  mailnet:
    driver: bridge
```

---

## **8. DNS Configuration**

Set up the following **DNS records:**

| Type    | Name                 | Value                                                        |
| ------- | -------------------- | ------------------------------------------------------------ |
| **A**   | `mail`               | **Your Server IP**                                           |
| **MX**  | `@`                  | **mail.fungigrotto.com (priority 10)**                       |
| **TXT** | `@`                  | `"v=spf1 mx ~all"`                                           |
| **TXT** | `_dmarc`             | `"v=DMARC1; p=quarantine; rua=mailto:admin@fungigrotto.com"` |
| **TXT** | `default._domainkey` | **(Generated by OpenDKIM for DKIM)**                         |

---

## **9. Build & Run**

Run the following commands:

```sh
docker-compose build
docker-compose up -d
```

To check logs:

```sh
docker logs -f mailserver
```

---

## **10. Testing**

✅ **Send a test email:**

```sh
telnet mail.fungigrotto.com 25
```

✅ **Check DKIM, SPF, DMARC:**

```sh
dig TXT default._domainkey.fungigrotto.com
```

✅ **Use Thunderbird or Outlook** to send and receive emails.

---

## **11. Security & Best Practices**

✔️ **Enable SSL/TLS** for encrypted communication. ✔️ **Monitor logs** to detect email spam and blacklisting issues. ✔️ **Use DKIM & SPF** to prevent email spoofing. ✔️ **Consider external SMTP relay services** like Amazon SES, Postmark, or SendGrid.

---

## **12. Conclusion**

This guide provides a robust, scalable **Dockerized Mail Server** setup on **SLES**. It ensures **email security, authentication, and spam filtering** while offering easy deployment using **Docker.**

For support, contact [**admin@fungigrotto.com**](mailto\:admin@fungigrotto.com)**.** 🚀

